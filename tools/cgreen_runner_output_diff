#!/bin/sh
#
# Will run the cgreen-runner in directory ../tools
# on library with name $1 (e.g. 'lib${name}.so')
# sources are in $2 for...
# ...expected output in $3 (includes LANG, xxx.c.expected, which we don't know here)
# ...and commands to normalize output which are in the file normalize_{name}.sed
name=$1; shift 1
sourcedir=$1 ; shift 1
expected=$1 ; shift 1
commandfile=${sourcedir}/normalize_${name}.sed

if [ -z "$CGREEN_PER_TEST_TIMEOUT" ]; then
    printf "Comparing output of ${name} to expected: "
else
    printf "Comparing output of ${name} to expected with CGREEN_PER_TEST_TIMEOUT=$CGREEN_PER_TEST_TIMEOUT: "
fi

# Run runner on library store output and error
../tools/cgreen-runner ?*${name}?* > ${name}.output 2> ${name}.error
cat ${name}.error >> ${name}.output

tempfile=`mktemp`

# sed commands to normalize...
# - line numbers in error messages
echo "s/:[0-9]+:/:/g" > $tempfile

# - timing info
echo "s/in [0-9]+ms\./in 0ms\./g" >> $tempfile

# - library prefix
echo s/\".*${name}\"/\"${name}\"/g >> $tempfile

# - source path
echo s%${sourcedir}/%%g >> $tempfile

# Do normalization using the commands in the tempfile and the specified commandfile
sed -E -f ${tempfile} -f ${commandfile} ${name}.output  > ${name}.output.tmp
mv ${name}.output.tmp ${name}.output

# Compare normalized output to expected
cmp --silent ${name}.output ${sourcedir}/${expected}

# Check for color capability
if test -t 1; then
    ncolors=$(tput colors)

    if test -n "$ncolors" && test $ncolors -ge 8; then
        green="$(tput setaf 2)"
        normal="$(tput sgr0)"
     fi
fi

# If not the same, show diff
rc=$?
if [ $rc -ne 0 ]
then
    echo
    diff -c ${sourcedir}/${expected} ${name}.output
else
    echo ${green}Ok${normal}
fi
exit $rc
